@import _root_.java.nio.file.Path
@import com.omegaup.libinteractive.target.MakefileRule
@import com.omegaup.libinteractive.target.ResolvedOutputLink
@(message: String, runPath: Path, resolvedLinks: Iterable[ResolvedOutputLink], allExecutables: String, allRules: Iterable[MakefileRule], sampleFiles: Iterable[String])
# @message

all: @allExecutables

@for(link <- resolvedLinks) {
@link.link: @link.target
	copy "@link.target.toString.replace("/", "\\")" "@link.link.toString.replace("/", "\\")"

}
@for(rule <- allRules) {
@rule.target.mkString(" "): @rule.requisites.mkString(" ")
	@rule.compiler @rule.params.replace("$@", rule.target.map("\"" + _.toString.replace("/", "\\") + "\"").mkString(" ")).replace("$^", rule.requisites.map("\"" + _.toString.replace("/", "\\") + "\"").mkString(" "))

}
.PHONY: run
run: @allExecutables
	@@@runPath

.PHONY: test
test: @allExecutables
	@@@runPath @sampleFiles.map("\"" + _ + "\"").mkString(" ")
